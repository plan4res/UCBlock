general: # general input parameters
  init_step: 1  # initial time step
  final_step: 1152  # final time step
  d_rate: 0.03  # discount rate
  project_lifetime: 20  # [y] project lifetime
  user_list: [ user1, user2, user3, user4, user5, user6, user7, user8, user9, user10 ]  # list of users for the simulation
  scen_s_sample: 3  # number of scenarios s to be extracted
  scen_eps_sample: 1  # number of scenarios eps to be extracted
  sigma_load: 0.3  # standard deviation associated with load in long period uncertainty
  sigma_ren: 0.2  # standard deviation associated with renewable production in long period uncertainty

  optional_datasets: # optional csv files storing data
    - input_resource_sto.csv
    - market_data_sto.csv

market: # market characteristics
  profile:
    buy_price: buy_price  # name of the column for the buying electricity price
    sell_price: sell_price  # name of the column for the selling electricity price
    consumption_price: consumption_price  # name of the column for the consumption price
    reward_price: reward_price  # name of the column describing the reward value
    penalty_price: penalty_price # name of the column describing the penalty price for energy squilibrium
    peak_categories: peak_categories  # name of the column describing the code peak tariff per each timestep
    peak_tariff: # peak power tariff described by a dictionary: loaded by performing a custom data parsing
      function: parse_peak_quantity_by_time_vectors
      inputs:
        - peak_categories
        - peak_tariff
    energy_weight: energy_weight
    peak_weight:
      function: parse_peak_quantity_by_time_vectors
      inputs:
        - peak_categories
        - peak_weight
    time_res: time_res  # time resolution column

users: # list of users and the corresponding assets

  user1: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user1
        std: std_load_user1

  user2: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user2
        std: std_load_user2

  user3: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user3
        std: std_load_user3

  user4: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user4
        std: std_load_user4

  user5: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user5
        std: std_load_user5

  user6: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user6
        std: std_load_user6

  user7: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user7
        std: std_load_user7

  user8: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user8
        std: std_load_user8

  user9: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user9
        std: std_load_user9

  user10: # name of the user
    # list of components

    load: # component load
      type: load
      # curt_cost: 6.0  # [€/kWh] load curtailment cost
      profile:
        load: load_user10
        std: std_load_user10